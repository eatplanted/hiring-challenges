INSERT INTO article_feature_type("articleFeatureName",description,"schema","requiresTranslation","introducedAt") VALUES ('Product name','','{"fields": [{"name": "productName", "type": "text", "regex": "", "required": true, "help": "", "selectOptions": [], "unitOfMeasurement": ""}]}',true,'2021-12-22'),
('Ingredients','','{"fields": [{"name": "ingredients", "type": "text, int", "regex": "", "required": true, "help": "", "selectOptions": [], "unitOfMeasurement": "%"}]}',true,'2021-12-22'),
('Allergens','','{"fields": [{"name": "allergens", "type": "text", "regex": "", "required": true, "help": "", "selectOptions": [], "unitOfMeasurement": ""}]}',true,'2021-12-22'),
('Nutritional values','','{"fields": [{"name": "energyKJ", "type": "int", "regex": "", "required": true, "help": "", "selectOptions": [], "unitOfMeasurement": "kJ/100g"}, {"name": "energyKcal", "type": "int", "regex": "", "required": true, "help": "", "selectOptions": [], "unitOfMeasurement": "kCal/100g"}, {"name": "fat", "type": "float", "regex": "(^([1-9])([0-9]+)$)(^[1-9]{1}[.][0-9]$)|^([0][.][5-9])$|^0$", "required": true, "help": "If the value is greater than or equal to 10 write as a whole number (e.g. 12, not 12.1). If value is between 0.5 and 10 write with one decimal place, e.g. 3.5, but not 3.51. If value is smaller than 0.5 write 0.", "selectOptions": [], "unitOfMeasurement": "g/100g "}, {"name": "ofWhichSaturates ", "type": "float", "regex": "(^([1-9])([0-9]+)$)(^[1-9]{1}[.][0-9]$)|^([0][.][5-9])$|^0$", "required": true, "help": "If the value is greater than or equal to 10 write as a whole number (e.g. 12, not 12.1). If value is between 0.5 and 10 write with one decimal place, e.g. 3.5, but not 3.51. If value is smaller than 0.5 write 0.", "selectOptions": [], "unitOfMeasurement": "g/100g "}, {"name": "carbohydrate", "type": "float", "regex": "(^([1-9])([0-9]+)$)(^[1-9]{1}[.][0-9]$)|^([0][.][5-9])$|^0$", "required": true, "help": "If the value is greater than or equal to 10 write as a whole number (e.g. 12, not 12.1). If value is between 0.5 and 10 write with one decimal place, e.g. 3.5, but not 3.51. If value is smaller than 0.5 write 0.", "selectOptions": [], "unitOfMeasurement": "g/100g "}, {"name": "ofWhichSugars", "type": "float", "regex": "(^([1-9])([0-9]+)$)(^[1-9]{1}[.][0-9]$)|^([0][.][5-9])$|^0$", "required": true, "help": "If the value is greater than or equal to 10 write as a whole number (e.g. 12, not 12.1). If value is between 0.5 and 10 write with one decimal place, e.g. 3.5, but not 3.51. If value is smaller than 0.5 write 0.", "selectOptions": [], "unitOfMeasurement": "g/100g "}, {"name": "fibre", "type": "float", "regex": "(^([1-9])([0-9]+)$)(^[1-9]{1}[.][0-9]$)|^([0][.][5-9])$|^0$", "required": true, "help": "If the value is greater than or equal to 10 write as a whole number (e.g. 12, not 12.1). If value is between 0.5 and 10 write with one decimal place, e.g. 3.5, but not 3.51. If value is smaller than 0.5 write 0.", "selectOptions": [], "unitOfMeasurement": "g/100g "}, {"name": "protein ", "type": "float", "regex": "(^([1-9])([0-9]+)$)(^[1-9]{1}[.][0-9]$)|^([0][.][5-9])$|^0$", "required": true, "help": "If the value is greater than or equal to 10 write as a whole number (e.g. 12, not 12.1). If value is between 0.5 and 10 write with one decimal place, e.g. 3.5, but not 3.51. If value is smaller than 0.5 write 0.", "selectOptions": [], "unitOfMeasurement": "g/100g "}, {"name": "salt", "type": "float", "regex": "(^([1-9])+.([0-9])$)|0.([1-9][0-9]$)|^(0.0[1-9])$|^0$", "required": true, "help": "If the value is greater than or equal to 1 write with one decimal place (e.g. 2,.1 not 2.11). If the value is between 0.0125 and 1 write with two decimal place, e.g. 0.55, but not 0.551. If value is smaller than 0.0125 write 0.", "selectOptions": [], "unitOfMeasurement": "g/100g "}, {"name": "vitaminB12", "type": "float", "regex": "^[0-9].[0-9][0-9]$", "required": true, "help": "x.xx, e.g 1.11, but not 1, 12.1 or 1.1", "selectOptions": [], "unitOfMeasurement": "\u00b5g/100g"}, {"name": "iron ", "type": "float", "regex": "^[0-9].[0-9][0-9]$", "required": true, "help": "x.xx, e.g 1.11, but not 1, 12.1 or 1.1", "selectOptions": [], "unitOfMeasurement": "mg/100g"}]}',false,'2021-12-22'),
('Preparation','','{"fields": [{"name": "preparation", "type": "text, int", "regex": "", "required": true, "help": "", "selectOptions": [], "unitOfMeasurement": ""}]}',true,'2021-12-22'),
('Certificate V-Label','','{"fields": [{"name": "vLabel", "type": "text", "regex": "", "required": true, "help": "", "selectOptions": [], "unitOfMeasurement": ""}]}',false,'2021-12-22'),
('Certificate Kosher','','{"fields": [{"name": "kosher ", "type": "boolean ", "regex": "", "required": true, "help": "", "selectOptions": [], "unitOfMeasurement": ""}]}',false,'2021-12-22'),
('Certificate Halal','','{"fields": [{"name": "halal ", "type": "boolean", "regex": "", "required": true, "help": "", "selectOptions": [], "unitOfMeasurement": ""}]}',false,'2021-12-22'),
('Adress Manufacturer','','{"fields": [{"name": "companyName", "type": "text", "regex": "", "required": true, "help": "", "selectOptions": [], "unitOfMeasurement": ""}, {"name": "streetName", "type": "text", "regex": "", "required": true, "help": "", "selectOptions": [], "unitOfMeasurement": ""}, {"name": "houseNumber ", "type": "text", "regex": "", "required": true, "help": "", "selectOptions": [], "unitOfMeasurement": ""}, {"name": "zipCode", "type": "int ", "regex": "", "required": true, "help": "", "selectOptions": [], "unitOfMeasurement": ""}, {"name": "city", "type": "text", "regex": "", "required": true, "help": "", "selectOptions": [], "unitOfMeasurement": ""}, {"name": "country ", "type": "text", "regex": "", "required": true, "help": "", "selectOptions": [], "unitOfMeasurement": ""}]}',true,'2021-12-22');